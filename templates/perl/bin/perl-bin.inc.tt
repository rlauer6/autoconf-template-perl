#-*- mode: makefile-gmake; -*-
# autogenerated by [% generator %] v[% version %] on [% timestamp %]
#
# You can regenerate this file any time you add a new script to your
# project by re-running `autoconf-template-perl.pl` in the root of
# your project.
#
# * from the root of your project...
# * drop a new file in the src/main/perl/bin directory
#   as {name}.pl.in (the .in) is important!
# * re-run `autoconf-template-perl.pl --refresh`
# 
# This will create a new `includes/bash-scripts.inc` file.
#
# See the README.md in the `autoconf-template-perl` project for more
# details.

[% INCLUDE "build-rules.tt" %]

# In order to support building scripts that are in sub-directories, the object
# sent to the template process (perl_scripts) is a hash where each key represents the 
# sub-directory and the values are arrays of files. Only 1 sub-directlory is supported

PERLSCRIPTS = [% makefile_am_list(perl_scripts, '.') %]

GPERLSCRIPTS = $(PERLSCRIPTS:.pl.in=.pl)

bindir = @bindir@

bin_SCRIPTS = \
    $(GPERLSCRIPTS)

[% FOREACH dir = perl_scripts.keys -%]
[% IF dir != '.' -%]
bin_[% dir %]dir = $(bindir)/[% dir %]

PERLSCRIPTS_[% dir | upper %] = [% makefile_am_list(perl_scripts, dir) %]

GPERLSCRIPTS_[% dir | upper %] = $(PERLSCRIPTS_[% dir | upper %]:.pl.in=.pl)

bin_[% dir %]_SCRIPTS = $(GPERLSCRIPTS_[% dir | upper %])

[% END %]
[% END %]

ALLSCRIPTS = [% makefile_am_flatten_list(perl_scripts) %]

GALLSCRIPTS = $(ALLSCRIPTS:.pl.in=.pl)

libexecdir = @libexecdir@

PERLCRITIC_PL = \
    $(GALLSCRIPTS)

# We may have multiple files with the same name, so generating a man page for each 
# might create duplicate man pages. To fix this, man pages will be installed in slightly
# non-obvious way {dirname}-{file}.1man

[% IF man_pages %]
MANPAGES = [% makefile_am_list(perl_scripts) %]

[% INCLUDE "manpage-rules.tt" %]
[% END %]

[% FOREACH section IN custom_sections %]
[% section.join("\n") %]
[% END %]
